<%- include("../header") %> 
<%- include("../components/navbar") %>
<%- include("../components/flash_msg") %>

<h2>Project Detail Page</h2>



<% items.forEach(item => { %>
    <a class="btn btn-success" href="/projects/edit?id=<%= item.getId() %>">Edit</a>
    <ul class="list-group item-list">
        <li class="list-group-item">
            <div class="row">
                <div class="col">
                    <div class="item-details">
                        <h3 class="item-name"><%= item.getName() %></h3>
                        <p class="item-description"><%= item.getDescription() %></p>
                        <p class="item-author">Author: <%= item.getAuthor() %></p>
                    </div>
                </div>
                <div class="col-3">
                    <p class="item-date">Created At: <%= item.displayCreatedAt() %></p>
                    <p class="item-date">Updated At: <%= item.displayUpdatedAt() %></p>
                </div>
            </div>
        </li>
    </ul>
<% }); %>

<br>
<h2>Task List</h2>

<style>
.task-input-width {
    width: 90%;
}

</style>

<!-- <form action="/tasks/add" method="post" class="col">
        <input name="project_id" type="hidden" value="<%= items[0].getId() %>">
        <input placeholder="Title" class="form-control task-input-width my-1" name="name" type="text" >
        <textarea rows="3" placeholder="Description" class="form-control task-input-width my-1" name="description"></textarea>
        <button class="btn btn-primary" type="submit">Add Task</button>
</form> -->




<!-- Modal Button -->
<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addTaskModal">
    Add Task
</button>

<!-- Modal -->
<div class="modal fade" id="addTaskModal">
<div class="modal-dialog">
    <div class="modal-content">

    <!-- Modal header -->
    <div class="modal-header">
        <h4 class="modal-title">Add Task</h4>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
    </div>
    <!-- modal body -->
    <div class="modal-body">
        <p>New Post</p>
        <div class="row">
            <input name="project_id" type="hidden" value="<%= items[0].getId() %>">
            <input name="name" class="col" type="text" placeholder="title">
            <div class="w-100"></div>
            <textarea name="description"  class="col"  cols="30" rows="3" placeholder="description"></textarea>
        </div>
        <br>
        <strong class="modal-msg" style="color: red;"></strong>
    </div>
    <!-- Modal footer -->
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal" >Cancle</button>
        <button type="button" class="btn btn-primary" onclick="modalfuntion(this)">Done</button>
    </div>
    </div>
</div>
</div>

<script>
async function modalfuntion(button) {

    var addTaskModal = $("#addTaskModal"); 
    var modalMsg = addTaskModal.find("strong.modal-msg")
    modalMsg.text("")

    button.disabled = true
    var beforeInnerHTML = button.innerHTML
    button.innerHTML = "Posting..."

    // input data
    var DataProjectId = addTaskModal.find("input[name='project_id']").val()
    var DataName = addTaskModal.find("input[name='name']").val()
    var DataDescription = addTaskModal.find("textarea[name='description']").val()

    await new Promise((resolve) => {
        setTimeout(() => {
            resolve(); //
        }, 500);
    });

    return new Promise((resolve, reject) => {

    fetch(`/api/tasks/add`, {
            method: 'post',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                name : DataName,
                description: DataDescription,
                project_id: DataProjectId
            })
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(error => {
                    throw new Error(error.error);
                })
            }
            return response.json();
        })
        .then(data => {
            resolve(data.tasks); // Resolve with the tasks data
            window.location.reload()
        })
        .catch(error => {

            var myDiv = document.getElementById("addTaskModal");
            
            modalMsg.text(error.message)

            console.error('Error fetching tasks:', error.message);
            reject(error); // Reject with the error
        }).finally(() => {
            button.disabled = false
            button.innerHTML = beforeInnerHTML
        }) 
    });


}
</script>





<br>

<style>

.task-item {
    transition: background-color 0.2s ease-in;
}

.task-item.task-item-closed {
    background-color: gray;
}
</style>

<ul class="list-group task-list">
    <% childItems.forEach(task => { %>
        <li class="list-group-item task-item <%= task.getIsClosed() ? "task-item-closed" : "" %> ">
            <div class="row">
                <div class="col-md-7">
                    <div class="task-details">
                        <h3 class="task-name"><%= task.getName() %></h3>
                        <div class="task-author">Author: <%= task.getAuthor() %></div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="task-date">Created: <%= task.displayCreatedAt() %></div>
                    <div class="task-date">Updated: <%= task.displayUpdatedAt() %></div>
                    <% const closedAt = task.displayClosedAt(); %>

                    <% if (closedAt) { %>
                        <div class="task-date">Completed: <%= closedAt %></div>
                    <% } else { %>
                        <div class="task-date">Not completed yet</div>
                    <% } %>

                </div>
                <div hidden class="show-value-is-closed"><%= task.getIsClosed() %></div>
                <div class="row">
                    <button class="btn btn-primary" onclick="changeTaskClosedState(this, <%= task.getId() %>)">Change State</button>
                    <button class="btn btn-success" onclick="getAllTasksWithParentProject(this, <%= task.getId() %>)">Show Results</button>
                </div>
            </div>
        </li>
    <% }); %>
</ul>


<br>
<br>
<br>

<script type="text/javascript" src="/js/common.js"></script>
<script type="text/javascript" src="/js/projects/detail_api.js"></script>

<script>
async function changeTaskClosedState(button, taskId) {
    const closedText = "1"
    const notClosedText = "0"

    try {

        const taskItem = button.closest('.task-item')
        const showValue = taskItem.querySelector('.show-value-is-closed');
        const currentStateClosed = String(showValue.textContent)
        console.log()

        if (currentStateClosed === notClosedText) {
            taskItem.classList.add("task-item-closed");
            showValue.textContent  = closedText;
        } else {
            taskItem.classList.remove("task-item-closed");
            showValue.textContent  = notClosedText;
        }

        await changeTaskCloseStateApi(taskId, currentStateClosed) ;
        setTimeout(function() {
            location.reload();
        }, 200);

    } catch (err) {
        console.error(err)
    }
};

async function getAllTasksWithParentProject(button, taskId) {

    // remove already exist items
    const taskListOfResult = button.closest('.task-item').querySelectorAll('.list-group-item'); // : Node[]

    if (taskListOfResult.length > 0) {
        taskListOfResult.forEach(item => {
            item.remove()
        })
        return
    }

    const tasks = await getAllTasksWithParentProjectIdApi(parseInt(taskId))

    // no item
    if (!tasks.length) {
        const noItem = document.createElement('li');
        noItem.classList.add('list-group-item');
        noItem.textContent = "no item"

        button.closest('.task-item').appendChild(noItem);
    }

    // default
    tasks.forEach(task => {
        const listItem = document.createElement('a');
        listItem.classList.add('list-group-item');
        listItem.textContent = task._data.name;
        listItem.setAttribute('href', `/results/detail?id=${task._data.id}`)
        button.closest('.task-item').appendChild(listItem);
    });
}

</script>

<%- include("../footer") %>
